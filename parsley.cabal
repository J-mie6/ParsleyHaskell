cabal-version:       2.2
name:                parsley
-- https://wiki.haskell.org/Package_versioning_policy
-- PVP summary:      +-+------- breaking API changes
--                   | | +----- non-breaking API additions
--                   | | | +--- code changes with no API change
version:             0.1.0.0
synopsis:            A fast parser combinator library backed by Typed Template Haskell

-- TODO: A longer description of the package.
-- description:

homepage:            https://github.com/j-mie6/ParsleyHaskell
bug-reports:         https://github.com/j-mie6/ParsleyHaskell/issues
license:             BSD-3-Clause
license-file:        LICENSE
author:              Jamie Willis
maintainer:          j.willis19@imperial.ac.uk
category:            Text
build-type:          Simple
-- TODO: Add README.md (and examples?)
extra-source-files:  ChangeLog.md
tested-with:         GHC == 8.6.5

flag dump-core
  description: Dump HTML for the core generated by GHC during compilation
  default:     False

library
  exposed-modules:     Parsley,
                       Parsley.Applicative,
                       Parsley.Alternative,
                       Parsley.Selective,
                       Parsley.Register,
                       Parsley.Combinator,
                       Parsley.Fold,
                       Parsley.Precedence

                       Parsley.Internal.Trace,
                       Parsley.Internal.Verbose,

                       Parsley.Internal.Common,
                       Parsley.Internal.Common.Fresh,
                       Parsley.Internal.Common.Indexed,
                       Parsley.Internal.Common.Queue,
                       Parsley.Internal.Common.State,
                       Parsley.Internal.Common.Utils,
                       Parsley.Internal.Common.Vec,

                       Parsley.Internal.Core,
                       Parsley.Internal.Core.CombinatorAST,
                       Parsley.Internal.Core.Defunc,
                       Parsley.Internal.Core.Identifiers,
                       Parsley.Internal.Core.InputTypes,
                       Parsley.Internal.Core.Primitives,

                       Parsley.Internal.Frontend,
                       Parsley.Internal.Frontend.CombinatorAnalyser,
                       Parsley.Internal.Frontend.Compiler,
                       Parsley.Internal.Frontend.Dependencies,
                       Parsley.Internal.Frontend.Optimiser,

                       Parsley.Internal.Backend,
                       Parsley.Internal.Backend.CodeGenerator,
                       Parsley.Internal.Backend.InstructionAnalyser,
                       Parsley.Internal.Backend.Optimiser,

                       Parsley.Internal.Backend.Machine,
                       Parsley.Internal.Backend.Machine.Defunc,
                       Parsley.Internal.Backend.Machine.Eval,
                       Parsley.Internal.Backend.Machine.LetBindings,
                       Parsley.Internal.Backend.Machine.LetRecBuilder,
                       Parsley.Internal.Backend.Machine.Identifiers,
                       Parsley.Internal.Backend.Machine.InputOps,
                       Parsley.Internal.Backend.Machine.InputRep,
                       Parsley.Internal.Backend.Machine.Instructions,
                       Parsley.Internal.Backend.Machine.Ops,
                       Parsley.Internal.Backend.Machine.State

  default-extensions:  BangPatterns,
                       DataKinds,
                       GADTs,
                       FlexibleContexts,
                       FlexibleInstances,
                       KindSignatures,
                       PolyKinds,
                       RankNTypes,
                       ScopedTypeVariables,
                       TemplateHaskell,
                       TypeOperators,

                       NoStarIsType

  build-depends:       base >=4.10 && <5,
                       mtl,
                       hashable,
                       unordered-containers,
                       array,
                       ghc-prim,
                       template-haskell,
                       containers,
                       dependent-map,
                       dependent-sum,
                       lift-plugin,
                       idioms-plugin,
                       pretty-terminal,
                       text,
                       bytestring
  build-tool-depends:  cpphs:cpphs >= 1.19
  hs-source-dirs:      src
  default-language:    Haskell2010
  ghc-options:         -Wall -Weverything -Wcompat
                       -Wno-unticked-promoted-constructors
                       -Wno-name-shadowing
                       -Wno-unused-do-bind
                       -Wno-implicit-prelude
                       -Wno-missing-import-lists
                       -Wno-missing-local-signatures
                       -Wno-safe
                       -Wno-unsafe
                       -Wno-missed-specialisations
                       -Wno-all-missed-specialisations
                       -Wno-incomplete-uni-patterns
                       -pgmP cpphs -optP --cpp
                       -freverse-errors

source-repository head
  type:                git
  location:            https://github.com/j-mie6/HaskellParsley

common benchmark-common
  build-tool-depends:  happy:happy
  build-depends:       base >=4.10 && <5,
                       parsley,
                       criterion >=1.5 && <1.6,
                       deepseq,
                       lift-plugin,
                       template-haskell,
                       parsec,
                       attoparsec,
                       megaparsec,
                       text,
                       bytestring,
                       mtl,
                       array,
                       containers
  hs-source-dirs:      benchmarks
  other-extensions:    TemplateHaskell
  other-modules:       Shared.BenchmarkUtils, Attoparsec.Extended, Megaparsec.Extended, Parsec.Extended
  default-language:    Haskell2010
  ghc-options:         -rtsopts -fplugin=LiftPlugin -fno-spec-constr
  if flag(dump-core)
    build-depends: dump-core
    ghc-options: -fplugin=DumpCore

benchmark brainfuck-bench
  import:              benchmark-common
  type:                exitcode-stdio-1.0
  other-modules:       BrainfuckBench.Shared, BrainfuckBench.Parsley.Parser, BrainfuckBench.Parsec.Parser, BrainfuckBench.Megaparsec.Parser,
                       BrainfuckBench.Attoparsec.Parser, BrainfuckBench.Handrolled.Parser, BrainfuckBench.Happy.Parser
  main-is:             BrainfuckBench/Main.hs

benchmark javascript-bench
  import:              benchmark-common
  type:                exitcode-stdio-1.0
  other-modules:       JavascriptBench.Shared, JavascriptBench.Parsley.Parser, JavascriptBench.Parsec.Parser, JavascriptBench.Megaparsec.Parser,
                       JavascriptBench.Attoparsec.Parser, JavascriptBench.Happy.Parser
  main-is:             JavascriptBench/Main.hs

benchmark nandlang-bench
  import:              benchmark-common
  type:                exitcode-stdio-1.0
  --cc-options:          -O3
  other-modules:       NandlangBench.Parsley.Parser, NandlangBench.Parsley.Functions, NandlangBench.Bison.Parser
  c-sources:           benchmarks/NandlangBench/Bison/lex.yy.c, benchmarks/NandlangBench/Bison/Nandlang.tab.c
  main-is:             NandlangBench/Main.hs